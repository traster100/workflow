ОПТИМИЗАЦИЯ ЗАГРУЗКИ РЕСУРСОВ НА СТРАНИЦЕ

1. Предзагрузка ресурсов

<link rel='preload' href='style.css' as='style'>
Загрузить и кэшировать ресурс (js,css). Полезно, когда ресурс понадобится через несколько секунд, после загрузки страницы. Браузер ничего не делает с ресурсом, js не выполняются, css не применяются. Ресурс кэшируется и немедленно предоставляется по запросу. Не подходит для ресурсов, которые нужны сразу.

<link rel='prefetch' href='style.css' as='style'>
Загрузить и кэшировать ресурс (js,css). Полезно, когда ресурс понадобится на следующей странице, и и вы хотите заранее его кэшировать. Браузер ничего не делает с ресурсом, js не выполняются, css не применяются. Ресурс кэшируется и немедленно предоставляется по запросу.

as может быть: style для таблиц стилей, script для скриптов, font для шрифтов.

2. Предзагрузка DNS

<link rel='preconnect' href='https://example.com'>
Заранее подключиться к домену. Полезно, когда хотите ускорить установку соединения в будущем, когда браузер извлекает ресурсы со стороннего домена. Например загружает шрифты Google Fonts, запрашивает ответ JSON с сервера API.

<link rel='dns-prefetch' href='https://example.com'>
Заранее подключиться к домену. Полезно, когда хотите ускорить установку соединения в будущем, когда браузер извлекает ресурсы со стороннего домена. Например загружает шрифты Google Fonts, запрашивает ответ JSON с сервера API. Для старых браузеров.

Использовать вместе preconnect и dns-prefetch не имеет смысла. Потому что preconnect уже включает в себя dns-prefetch и многое другое. Но dns-prefetch быстрее.

3. Пререндер страниц

<link rel='prerender' href='https://example.com/about'>
Загрузить URL-адрес и отобразить его на невидимой вкладке. Полезно, когда знаешь следующую страницу.