VPS

Виртуализация методами операционной системы
FreeBSD Jail, Parallels Virtuozzo Containers, iCore Virtual Accounts, OpenVZ

Виртуализация на аппаратном уровне
VMWare, LDoms, KVM, Microsoft Hyper-V, XEN
-------------------------------------------------

Настройка Cent OS 7

посмотреть разделы ФС
df -h

посмотреть версию
cat /proc/version
cat /etc/centos-release

обновиться целиком
yum update

сменить root пароль
sudo passwd root

добавить обычного юзера
adduser myuser1
passwd myuser1

чтобы под обычным юзером, запускать команды sudo
gpasswd -a myuser1 wheel
-------------------------------------------------

Установка Apache

yum install httpd
systemctl start httpd.service
systemctl enable httpd.service
папка /var/www/html/

проверить версию
httpd -v

список модулей
httpd -M

настроить виртуальный хост
https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-centos-7

взять отсюда Options -Indexes +FollowSymLinks
https://linuxize.com/post/how-to-set-up-apache-virtual-hosts-on-centos-7/
-------------------------------------------------

Установка MySQL

yum install http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm
yum install mysql-server
systemctl start mysqld

сменить пароль для root юзера
grep 'temporary password' /var/log/mysqld.log
- видим временный пароль qwerty123
- меняем на свой
mysql -uroot -p
ALTER USER 'root'@'localhost' IDENTIFIED BY 'root123';
- проверить mysql -uroot -p'root123'

проверить версию
mysql -V

конфиг /etc/my.cnf

создать базу данных
CREATE DATABASE database123;
SHOW DATABASES;

создать нового юзера для php-скриптов
CREATE USER 'user1'@'localhost' IDENTIFIED BY 'pass1';
GRANT ALL PRIVILEGES ON database123.* TO 'user1'@'localhost';
FLUSH PRIVILEGES;
systemctl restart mysqld
проверить mysql -uuser1 -p'pass1'

создать нового юзера для HeidiSQL
CREATE USER 'user2'@'%' IDENTIFIED BY 'pass2';
GRANT ALL PRIVILEGES ON database123.* TO 'user2'@'%';
FLUSH PRIVILEGES;
systemctl restart mysqld
проверить mysql -uuser2 -p'pass2'

настроить SSL
SHOW GLOBAL VARIABLES LIKE '%ssl%';
mysql> STATUS; (смотреть строку SSL: Not in use)

В /etc/my.cnf пишем
[mysqld]

bind-address = *

collation-server = utf8mb4_unicode_ci
character-set-server = utf8mb4

ssl-ca=/var/lib/mysql/ca.pem
ssl-cert=/var/lib/mysql/server-cert.pem
ssl-key=/var/lib/mysql/server-key.pem

[client]
ssl-ca=/var/lib/mysql/ca.pem
ssl-cert=/var/lib/mysql/client-cert.pem
ssl-key=/var/lib/mysql/client-key.pem

systemctl restart mysqld

проверить
mysql> STATUS; (видим SSL: Cipher in use is DHE-RSA-AES256-SHA)

закрыть удаленный доступ
/etc/my.cnf
[mysqld]
bind-address = 127.0.0.1
-------------------------------------------------

Установка PHP 7.3

yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm
yum -y install epel-release yum-utils
yum-config-manager --disable remi-php54
yum-config-manager --enable remi-php73
yum -y install php php-cli php-fpm php-mysqlnd php-zip php-devel php-gd php-mcrypt php-mbstring php-curl php-xml php-pear php-bcmath php-json
systemctl restart httpd.service

Проверим версию
php -v

Список модулей
yum search php-

Описание модуля
yum info php-gd

Установка модуля
yum install php-gd

настроить /etc/php.ini
upload_max_filesize = 20M - максимальный размер загружаемого файла
display_errors = Off - отключить показ php ошибок
systemctl restart php-fpm
-------------------------------------------------

Установка Composer

php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
HASH="$(wget -q -O - https://composer.github.io/installer.sig)"
php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php --install-dir=/usr/local/bin --filename=composer

проверить версию
composer -V

установить пакет
composer require nesbot/carbon

установить пакет под конкретной версией PHP
/opt/php73/bin/php /usr/bin/composer COMMANDNAME
/opt/php73/bin/php /usr/bin/composer require nesbot/carbon

Если такая установка не сработала, то юзать
yum install composer


Работа с Composer

создать папку /home/user/test
перейти в папку cd /home/user/test

инициализировать композер
composer init
это создаст пустой composer.json

поставить пакет https://github.com/guzzle/guzzle
composer require guzzlehttp/guzzle

появится папка /home/user/test/vendor в которой:
vendor/autoload.php - файл автозагрузчика composer
vendor/composer - папка с сервисными классами composer
vendor/guzzlehttp - папка пакета

в composer.json добавится строка:
"require": {
   "guzzlehttp/guzzle": "^6.3"
}

поставить пакет https://github.com/Seldaek/monolog
composer require monolog/monolog
появится папка vendor/monolog

composer.json станет выглядеть так:
"require": {
   "guzzlehttp/guzzle": "^6.3",
   "monolog/monolog": "^1.23"
}

работать в php
<?php
require 'vendor/autoload.php';
$client = new \GuzzleHttp\Client();
?>

обновить пакеты
composer update

удалить пакет
composer remove guzzlehttp/guzzle
это удалит папку vendor/guzzlehttp

composer.json станет выглядеть так:
"require": {
    "monolog/monolog": "^1.23"
}

посмотреть установленные пакеты
cd foldername
composer show
-------------------------------------------------

Установка HTTPS

yum -y update
yum -y install mod_ssl
yum -y install epel-release
yum -y install yum-utils
yum -y install certbot-apache
certbot

вбили мыло, отказались от новостей, согласились на условия использования, согласились на редиректы с http на https

вылезла надпись
Created an SSL vhost at
/etc/httpd/sites-available/domain.info-le-ssl.conf

Создан файл
/etc/httpd/sites-available/domain.info-le-ssl.conf
в котором всё тоже самое что и тут
/etc/httpd/sites-available/domain.info.conf
плюс добавлены настройки SSLCertificateFile, SSLCertificateKeyFile, SSLCertificateChainFile

На вопрос
Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access. Ответ 2: Redirect - Make all requests redirect to secure HTTPS access.

Проверка
https://www.ssllabs.com/ssltest/analyze.html?d=domain.info
https://www.ssllabs.com/ssltest/analyze.html?d=www.domain.info

Your certificate and chain have been saved at: /etc/letsencrypt/live/domain.info/fullchain.pem
Your key file has been saved at: /etc/letsencrypt/live/domain.info/privkey.pem

Your cert will expire on 2019-07-01. To obtain a new or tweaked version of this certificate in the future, simply run certbot again with the "certonly" option. To non-interactively renew *all* of your certificates, run "certbot renew"

Проверка
curl http://domain.info
curl https://domain.info
certbot certificates

Добавим в крон автопродление сертификата
crontab -e
i
* */12 * * * /usr/bin/certbot renew >> /var/log/le-renew.log
:wq
crontab -l
-------------------------------------------------

Правила .htaccess

.htaccess достаточно только в родительскую папку бросить, а не по всем подпапкам.

Редирект с www на без www
RewriteCond %{HTTP_HOST} ^www\.(.*)$
RewriteRule ^(.*)$ http://%1/$1 [L,R=301]

Установка прав массово на все файлы .htaccess, во всех папках
- проверить что найдет
find . -name .htaccess -print
- применить
find . -name .htaccess | xargs chmod 0644

Права на файлы
.htaccess - 644
.htpasswd - 640
.php - 600
конфиги config.php - 400
для папок с загружаемыми ресурсами - 766 (если не заработало то 775)

#заблокировать доступ к .htaccess
<Files .htaccess>
 order allow,deny
 deny from all
</Files>

Выполнение SSI-директив, не показывать содержимое папки, следовать символическим ссылкам)
Options Includes -Indexes FollowSymLinks

Ускорение времени загрузки за счет сжатия файлов:
AddOutputFilterByType DEFLATE text/html #для сжатия HTML-файлов
AddOutputFilterByType DEFLATE text/plain #для сжатия текстовых файлов
AddOutputFilterByType DEFLATE application/javascript #сжать javascript

Запретить добавление ссылок на изображения со сторонних ресурсов:
RewriteEngine on
RewriteCond %{HTTP_REFERER} !^$
RewriteCond %{HTTP_REFERER} !^http(s)?://(www\.)?yourdomain.com [NC]
RewriteRule \.(jpg|jpeg|png|gif)$ - [NC,F,L]

Кэширование файлов:
<FilesMatch ".(flv|gif|jpg|jpeg|png|ico|swf|js|css|pdf)$">
Header set Cache-Control "max-age=2592000"
</FilesMatch>

Отключение кэширования для разных типов файлов:
<FilesMatch ".(pl|php|cgi|spl|scgi|fcgi)$">
Header unset Cache-Control
</FilesMatch>
-------------------------------------------------

Проверка колва редиректов

wget domain.com 2>&1 | grep Location
https://a.pr-cy.ru/domain.com
-------------------------------------------------

Правила Cron

предотвратить двойной запуск задач
*/1 * * * * php index.php >> index.log 2>&1 (2>&1 не даст)

посмотреть кроны
crontab -l

посмотреть конкретный крон
crontab -l -u filename

запустить кроны
service cron start

остановить кроны
service cron stop

сам файл крон
/var/spool/cron/root
/var/spool/cron/filename

Правка крона
crontab -e

Запуск крона каждые 3 секунды
*/1 * * * * php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3; php index.php; /bin/sleep 3;
-------------------------------------------------

Установка Nginx

добавить репозиторий EPEL
yum install epel-release

установить
yum install nginx

запустить
systemctl start nginx

включить в автозагрузку
systemctl enable nginx

проверить
nginx -t
nginx -T
nginx -v
netstat -tulpn | grep nginx

настройки /etc/nginx/nginx.conf
логи /var/log/nginx

команды
systemctl start nginx
systemctl restart nginx
systemctl stop nginx
systemctl status nginx
-------------------------------------------------

Настройка таймзоны, и синхронизации времени

timedatectl set-timezone UTC

yum install chrony
systemctl start chronyd
systemctl enable chronyd
systemctl status chronyd
-------------------------------------------------

Установка PHP-FPM

yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm
yum install epel-release yum-utils
yum-config-manager --disable remi-php54
yum-config-manager --enable remi-php73
yum install php php-cli php-fpm php-mysql php-mysqlnd php-zip php-devel php-gd php-mcrypt php-mbstring php-curl php-xml php-pear php-bcmath php-json

проверить
php -v
php-fpm -v

настроить /etc/php.ini
cgi.fix_pathinfo=0

настроить /etc/php-fpm.d/www.conf
user = nginx
group = nginx
listen = /var/run/php-fpm/php-fpm.sock
listen.owner = nginx
listen.group = nginx
listen.mode = 0660

включить в автозагрузку
systemctl enable php-fpm

запустить
systemctl start php-fpm

конфиги
/etc/php-fpm.d/www.conf
/etc/php.ini
/etc/php.d

команды
systemctl start php-fpm
systemctl restart php-fpm
systemctl stop php-fpm
systemctl status php-fpm
-------------------------------------------------

Установка oPcache

установить
yum install php-opcache

настроить /etc/php.d/10-opcache.ini
opcache.enable = 1
opcache.enable_cli = 1

systemctl restart nginx
systemctl restart php-fpm
-------------------------------------------------

Команды SSH

посмотреть разделы ФС
df -h

удалить папку
cd /path/parentfoldername
rm -rf foldername

удалить файл
rm filename.txt

размер папки
du -sh /path/foldername

колво файлов в папке
find /path/foldername -type f | wc -l
-------------------------------------------------

UnZip

посмотреть версию
unzip -v

посмотреть содержимое архива
unzip -l /path/folder/archive.zip

извлечь архив
unzip /path/folder/archive.zip
unzip /path/folder/archive.zip -d /path/folder/archive/

папку в архив
zip -r /path/folder/archive.zip /path/folder/archive/
-------------------------------------------------