Настройка Cent OS 7

Версия сервера
cat /proc/version
cat /etc/centos-release
cat /etc/system-release
uname -a
rpm --query centos-release
hostnamectl

Обновимся целиком
yum update
----------------------------------------------------

Установка Apache

yum install httpd
systemctl start httpd.service
systemctl enable httpd.service
папка /var/www/html/

Проверим версию
httpd -v

Список модулей
httpd -M

Настройка виртуальных хостов
Мануал https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-centos-7
Отсюда взял Options -Indexes +FollowSymLinks https://linuxize.com/post/how-to-set-up-apache-virtual-hosts-on-centos-7/
----------------------------------------------------

Установка MySQL

yum install http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm
yum install mysql-server
systemctl start mysqld
mysql_secure_installation

Пароль для root-юзера
grep 'temporary password' /var/log/mysqld.log
Видим временный пароль qwerty123
Меняем на свой
mysql -uroot -p
ALTER USER 'root'@'localhost' IDENTIFIED BY 'root123';
Проверка mysql -uroot -p'root123'

Проверим версию
mysql -V

Расположение файла my.cnf
mysql --help покажет все места
/etc/my.cnf

Создадим базу данных
CREATE DATABASE database123;
SHOW DATABASES;

Создадим нового юзера (для php-скриптов)
CREATE USER 'user1'@'localhost' IDENTIFIED BY 'pass1';
GRANT ALL PRIVILEGES ON database123.* TO 'user1'@'localhost';
FLUSH PRIVILEGES;
systemctl restart mysqld
Проверка mysql -uuser1 -p'pass1'

Создадим нового юзера (для HeidiSQL)
CREATE USER 'user2'@'%' IDENTIFIED BY 'pass2';
GRANT ALL PRIVILEGES ON database123.* TO 'user2'@'%';
FLUSH PRIVILEGES;
systemctl restart mysqld
Проверка mysql -uuser2 -p'pass2'

Настройка SSL
SHOW GLOBAL VARIABLES LIKE '%ssl%';
mysql> STATUS; (смотреть строку SSL: Not in use)
В /etc/my.cnf пишем:
[mysqld]
bind-address = *
ssl-ca=/var/lib/mysql/ca.pem
ssl-cert=/var/lib/mysql/server-cert.pem
ssl-key=/var/lib/mysql/server-key.pem
[client]
ssl-ca=/var/lib/mysql/ca.pem
ssl-cert=/var/lib/mysql/client-cert.pem
ssl-key=/var/lib/mysql/client-key.pem

systemctl restart mysqld
mysql> STATUS; (видим SSL: Cipher in use is DHE-RSA-AES256-SHA)
----------------------------------------------------

Установка PHP 7.3

yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm
yum -y install epel-release yum-utils
yum-config-manager --disable remi-php54
yum-config-manager --enable remi-php73
yum -y install php php-cli php-fpm php-mysqlnd php-zip php-devel php-gd php-mcrypt php-mbstring php-curl php-xml php-pear php-bcmath php-json
systemctl restart httpd.service

Проверим версию
php -v

Список модулей
yum search php-

Описание модуля
yum info php-gd

Установка модуля
yum install php-gd
----------------------------------------------------

Установка Composer

php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
HASH="$(wget -q -O - https://composer.github.io/installer.sig)"
php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php --install-dir=/usr/local/bin --filename=composer

Проверим версию
composer -V

Установка пакетов
composer require nesbot/carbon

Если такая установка не сработала, то юзать
yum install composer

Работа с Composer

создали папку /home/user/test
перешли в папку cd /home/user/test

инициализируем композер
composer init
это создаст пустой composer.json

например нужен пакет https://github.com/guzzle/guzzle
ставим пакет composer require guzzlehttp/guzzle

появится папка /home/user/test/vendor в которой:
vendor/autoload.php - файл автозагрузчика composer
vendor/composer - папка с сервисными классами composer
vendor/guzzlehttp - папка пакета

в composer.json добавится строка:
"require": {
   "guzzlehttp/guzzle": "^6.3"
}

например нам нужен еще пакет https://github.com/Seldaek/monolog
ставим пакет composer require monolog/monolog
появится папка vendor/monolog

composer.json станет выглядеть так:
"require": {
   "guzzlehttp/guzzle": "^6.3",
   "monolog/monolog": "^1.23"
}

создадим файл /home/user/test/index.php:
<?php
require 'vendor/autoload.php'; // подключили автолоадер composer
$client = new \GuzzleHttp\Client();
//далее код
?>

через год обновим либы
composer update
это автоматически скачает новые версии всех пакетов, и все их зависимости

удалим ненужный пакет
composer remove guzzlehttp/guzzle
это удалит папку vendor/guzzlehttp

composer.json станет выглядеть так:
"require": {
    "monolog/monolog": "^1.23"
}
----------------------------------------------------

Установка HTTPS

yum -y update
yum -y install mod_ssl
yum -y install epel-release
yum -y install yum-utils
yum -y install certbot-apache
certbot
ввести мыло example@gmail.com
поделиться мылом для новостей с Electronic Frontier Let's Encrypt? Нет
Вбить сайты для которых хостим установить HTTPS

Вылезла ошибка
The server could not connect to the client to verify the domain :: dns :: DNS problem: NXDOMAIN looking up A for www

Проверить что в DNS есть обе А-записи:
domain.info A 11.111.11.111
www.domain.info A 11.111.11.111

Пробуем заново
certbot

Всё прошло. Далее надпись
Created an SSL vhost at /etc/httpd/sites-available/domain.info-le-ssl.conf
И создан файл /etc/httpd/sites-available/domain.info-le-ssl.conf в котором всё тоже самое
что и тут /etc/httpd/sites-available/domain.info.conf плюс добавлены настройки SSLCertificateFile, SSLCertificateKeyFile, SSLCertificateChainFile

Далее идет вопрос
Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.
Ответ 2: Redirect - Make all requests redirect to secure HTTPS access.

Проверка
https://www.ssllabs.com/ssltest/analyze.html?d=domain.info
https://www.ssllabs.com/ssltest/analyze.html?d=www.domain.info

Your certificate and chain have been saved at: /etc/letsencrypt/live/domain.info/fullchain.pem
Your key file has been saved at: /etc/letsencrypt/live/domain.info/privkey.pem

Your cert will expire on 2019-07-01. To obtain a new or tweaked version of this certificate in the future, simply run certbot again with the "certonly" option. To non-interactively renew *all* of your certificates, run "certbot renew"

Проверка
curl http://domain.info
curl https://domain.info
certbot certificates

Добавим в крон автопродление сертификата 2 раза в день
- создадим файл /var/spool/cron/root
- положим туда строку * */12 * * * /usr/bin/certbot renew >> /var/log/le-renew.log
- посмотрим список кронов crontab -l
- применим крон crontab /var/spool/cron/root
----------------------------------------------------

Редирект с www на без www
RewriteCond %{HTTP_HOST} ^www\.(.*)$
RewriteRule ^(.*)$ http://%1/$1 [L,R=301]

Установка прав массово на все файлы .htaccess, во всех папках
- проверить что найдет
find . -name .htaccess -print
- применить
find . -name .htaccess | xargs chmod 0644


Права на файлы
.htaccess - 644
.htpasswd - 640
.php - 600
конфиги config.php - 400
для папок с загружаемыми ресурсами - 766 (если не заработало то 775)