HTML DOM Parser

http://simplehtmldom.sourceforge.net
require_once 'simple_html_dom.php';
--------------------

$a = 'строка';
$html = new simple_html_dom();
$html->load($a);
$items = $html->find('p a.class1.class2[name="name"] span');
--------------------

Поиск от рута
Вернет массив элементов как тегов в коде, или пустой массив

Если ("selector, 0") - вернет первый элемент как тег в коде, или null

Можно несколько селекторов
Можно получать и присваивать значение
null - удалить
--------------------

foreach ($items as $v) {
  $v->tag;
  $v->id;
  $v->class;
  $v->href;
  
  все что внутри тега, вместе с внутренними тегами
  $v->innertext;
  
  все что внутри тега, без тегов
  $v->plaintext;
  
  сам тег с наполнением, с тегами
  $v->outertext;
}

Сохранение в строку
$html->save();

Очистка памяти
$html->clear();
unset($html);

Возвращает объект N-го ребенка если $index установлен, иначе массив детей-объектов
$html3->children();

Возвращает родителя элемента
$html3->parent();

Возвращает первого ребенка или NULL если не найдено
$html3->first_child();

Возвращает последнего ребенка элемента или NULL если не найдено
$html3->last_child();

Возвращает следующий сестринский элемент или NULL если не найдено
$html3->next_sibling();

Возвращает предыдущий сестринский элемент или NULL если не найдено
$html3->prev_sibling();
--------------------

Элемент имеет такой аттрибут
[attribute]

Элемент имеет такой аттрибут, с таким значением
[attribute="value"]

Элемент имеет такой аттрибут, не с таким значением
[attribute!="value"]

Элемент имеет такой аттрибут, первое значение которого начинается с "value"
[attribute^="value"]

Элемент имеет такой аттрибут, последнее значение которого заканчивается на "value"
[attribute$="value"]

Элемент имеет такой аттрибут, значение которого содержит "value"
[attribute*="value"]
--------------------

Более новая альтернатива

use voku\helper\HtmlDomParser;

$html = HtmlDomParser::str_get_html($string);
foreach ($html1->find('a') as $v) {
  $v1->find('a', 0)->href;
  if (empty($v1->findOneOrFalse('a'))) {}
}