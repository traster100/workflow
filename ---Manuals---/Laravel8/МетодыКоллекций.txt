all() - вернет базовый массив
average(), avg() - вернет среднее значение, можно по ключу

chunk() - разбивает на несколько мелких коллекций
collapse() - сливает коллекции в одну коллекцию
combine() - сливает ключи одной коллекции, со значениями другой коллекции
collect() - возвращает новый инстанс Collection. копию из А в Б
concat() - добавляет массив или коллекцию, в конец существующей коллекции
contains(), containsStrict() - определяет, есть ли в коллекции значение, или пара ключ-значение. строго и нестрого
count() - колво элементов коллекции
countBy() - колво вхождений каждого значения в коллекцию
crossJoin() - декартово произведение всех вариантов

dd() - как var_dump(); exit
dump() - как var_dump()
diff() - вернет значения из первой коллекции, которых нет во второй коллекции
diffAssoc() - вернет пары ключи-значения из первой коллекции, которых нет во второй коллекции
diffKeys() - вернет пары ключи-значения из первой коллекции, которых нет во второй коллекции. сравнение на основе ключей
duplicates(), duplicatesStrict() - возвращает дубли из коллекции. вместе с ключами. массив будет ассоциативный. строго и нестрого

each() - перебор элементов коллекции
eachSpread() - перебор элементов коллекции когда элементы это подмассивы
every() - проверит что ВСЕ элементы обладают критерием истинности. для пустой коллекции вернет true
except() - вернет коллекцию, за исключением указанных ключей

filter() - фильтрует коллекцию и возращает коллекцию в которой элементы проходят критерий истинности
first() - вернет первый элемент, проходящий критерий истинности
firstWhere() - вернет первую пару ключ-значение, проходящую критерий истинности
flatMap() - перебирает коллекцию и может изменять элемент, возвращая новую коллекцию измененных элементов
flatten() - многомерную коллекцию сглаживает в одну плоскую
flip() - меняет местами ключи и значения
forget() - удаляет элемент по ключу. модифицирует коллекцию. а не возвращает новую
forPage() - разбивает коллекцию. N номер страницы, M колво элементов

get() - получить элемент коллекции по ключу
groupBy() - группировка коллекций по ключу

has() - проверяет есть ли элемент/элементы в коллекции

implode() - объединяет коллекции в коллекции
intersect() - удалит всё из первой коллекции, чего нет во второй коллекции. сохраняя ключи
intersectByKeys() - удалит всё из первой коллекции, каких ключей нет во второй коллекции
isEmpty() - проверка что коллекция пуста
isNotEmpty() - проверка что коллекция НЕпуста

join() - сливает коллекцию со строкой

keyBy() - собирает коллекции по ключу и соответствующие значения делает ключами
keys() - вернет все ключи коллекции

last() - возвращает последний элемент, соответствующий критерию истинности

macro() - расширяет коллекции. позволяет добавить новый метод в коллекцию (класс Collection), на лету
make() - создает новый инстанс коллекции
map() - обходит коллекцию и передает каждый элемент в колбек. колбек модифицирует и возвращает, образуя новую коллекцию измененных элементов. не изменяет вызываемую коллекцию. возвращает новую. как большинство методов тут.
mapInto() - обходит коллекцию, передавая значение в конструктор класса
mapSpread() - обходит коллекцию, передавая значение в колбек, в котором можно изменить и вернуть. создавая новую коллекцию
mapToGroups() - группировка в колбеке
mapWithKeys() - группировка в колбеке
max() - вернет максимальное значение по выборке по ключу
median() - вернет медианное значение по выборке по ключу
merge() - сливает коллекции. если ключи совпадают то перезапишет. если ключи цифровые то просто добавит всю коллекцию в конец оригинальной коллекции
mergeRecursive() - рекурсивно сливает коллекции. если ключи совпадают то будет создан подмассив значений с этим ключом
min() - вернет минимальное значение по выборке по ключу
mode() - вернет самое "частое" значение

nth() - создаст коллекцию, состоящую из каждого N-го элемента

only() - вернет коллекцию с заданными ключами

pad() - заполняет массив элементами до заданного размера. аналог PHP array_pad
partition() - отделить элементы прошедшие проверку критерием истинности, от остальных
pipe() - обходит коллекцию и возвращает результат
pluck() - извлекает в массив все значения для заданного ключа
pop() - удаляет и возвращает последний элемент коллекции
prepend() - добавляет элемент в начало коллекции
pull() - удаляет и возвращает элемент из коллекции по ключу
push() - добавляет элемент в конец коллекции
put() - добавит ключ и значение в коллекцию

random() - возвращает случайный элемент коллекции
reduce() - уменьшает коллекцию к одному значению, передавая результат каждой итерации в следующую итерацию
reject() - фильтрует коллекцию через колбек. если колбек вернет true то элемент удаляется
replace(), replaceRecursive() - аналог merge, перезаписывает элементы с одинаковыми строковыми и числовыми ключами
reverse() - меняет порядок элементов, сохраняя ключи

search() - поиск значения в коллекции, возвращает ключ
shift() - удаляет и возвращает первый элемент из коллекции
shuffle() - рандомно перемешивает
skip() - возвращает новую коллекцию без первых N членов. вырезает от начала и до N
skipUntil() - возвращает новую коллекцию c членами которые прошли критерий истины
skipWhile() - пропустит элементы для которых колбек true и вернет новую коллекцию
slice() - возвращает часть коллекции, начиная от заданного индекса. сохранит ключи
some() - псевдоним contains()
sort() - сортировка коллекции. сохраняет ключи. аналог PHP uasort
sortDesc() - как sort() но в обратном порядке
sortBy() - сортирует коллекцию по ключу. сохраняет ключи
sortByDesc() - как sortBy() но в обратном порядке
sortKeys() - сортировка на основе ключей
sortKeysDesc() - как sortKeys() но в обратном порядке
splice() - возвращает срез начиная с указанного индекса
split() - разбивает на подмассивы
sum() - сумма всех элементов

take() - вернет новую коллекцию с заданным числом элементов
takeUntil() - возвращает элементы пока колбек true (или false? судя по коду - false)
takeWhile() - возвращает элементы пока колбек false
tap() - позволяет внедриться между методами и что-то сделать с коллекцией, не затрагивая саму коллекцию
times() - создает новую коллекцию вызывая колбек N раз
toArray() - конвертит коллекцию и вложенные объекты - в массив PHP
toJson() - конвертит коллекцию в JSON
transform() - обходит коллекцию и вызывает колбек на каждый элемент. элементы будут изменены. изменяет саму коллекцию

union() - сливает коллекции. если во второй коллекции есть такие же ключи как в первой. то останется то, что в первой
unique(), uniqueStrict() - возвратит уникальные элементы. ключи будут сохранены. сравнение строго и нестрого
unless() - колбек будет выполняться до тех пор, пока первый аргумент будет true. when() - обратный для unless()
unlessEmpty() - аналог whenNotEmpty()
unlessNotEmpty() - аналог whenEmpty()
unwrap() - передали значения, получили коллекцию

values() - сбросит ключи

when() - колбек будет выполняться до тех пор, пока первый аргумент будет true. unless() - обратный для when()
whenEmpty() - колбек будет выполняться пока коллекция пустая. whenEmpty() - обратный для whenNotEmpty()
whenNotEmpty() - колбек будет выполняться пока коллекция Непустая. whenNotEmpty() - обратный для whenEmpty()
where(), whereStrict() - фильтрует коллекцию с помощью пары ключ-значение. строго и нестрого
whereBetween() - диапазон
whereIn(), whereInStrict() - вхождения. строго и нестрого
whereInstanceOf() - фильтрует по классу
whereNotBetween() - фильтрует вне приделов диапазона
whereNotIn(), whereNotInStrict() - фильтрует Невхождения. строго и нестрого
whereNotNull() - фильтрует на Неравенство NULL
whereNull() - фильтрует на равенство NULL
wrap() - делает из значения коллекцию

zip() - слияние значений массива со значениями коллекции в соответствующих индексах
--------------------

Методы высокого порядка это методы внутри которых цикл

average, avg, contains, each, every, filter, first, flatMap, groupBy, keyBy, map, max, min, partition, reject, skipUntil, skipWhile, some, sortBy, sortByDesc, sum, takeUntil, takeWhile, unique

Пример
$users = User::where('votes', 1)->get();
$users->each->markAsVip(); вызовет метод markAsVip() для каждого объекта в коллекции

$users = User::where('group', 'dev')->get();
$users->sum->votes; вызовет метод votes() для каждого объекта в коллекции
-------------------------------------------------

Дополнительные методы

contains - определить наличие модели в массиве
diff - вернет все модели кроме указанных
except - вернет все модели кроме указанных id

find - найти модель по id, модели, массиву
fresh - заново загружает модель из базы

intersect - загружает модели по массиву id

load - загружает отношения модели
loadMissing - загружает отношения модели если не были загружены

modelKeys - вернет массив id моделей в массиве
makeVisible - делает аттрибут видимым
makeHidden - делает аттрибут невидимым

only - вернет массив моделей по id
toQuery - возвращает Query Builder
unique - вернет все уникальные модели по id